# Generated by Django 5.0.1 on 2024-01-28 17:31

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('address', models.CharField()),
            ],
            options={
                'db_table': 'branch',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField()),
                ('status', models.TextField()),
                ('date_published', models.DateField()),
                ('section', models.TextField()),
                ('language', models.CharField()),
                ('publisher', models.CharField()),
                ('genre', models.CharField()),
            ],
            options={
                'db_table': 'resource',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField()),
                ('last_name', models.CharField()),
                ('username', models.CharField(unique=True)),
                ('address', models.CharField()),
                ('phone_number', models.CharField()),
                ('email', models.CharField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'account',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'administrator',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'employee',
            },
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reader',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
                ('reader', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.reader')),
            ],
            options={
                'db_table': 'card',
            },
        ),
        migrations.CreateModel(
            name='Borrowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField()),
                ('date_borrowed', models.DateField()),
                ('date_due', models.DateField()),
                ('date_returned', models.DateField(blank=True, null=True)),
                ('times_renewed', models.IntegerField()),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.reader')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.resource')),
            ],
            options={
                'db_table': 'borrowing',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('udc', models.CharField()),
                ('director', models.CharField()),
                ('screenwriter', models.CharField()),
                ('producer', models.CharField()),
                ('duration', models.CharField()),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.resource')),
            ],
            options={
                'db_table': 'movie',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issn', models.CharField()),
                ('issue', models.CharField()),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.resource')),
            ],
            options={
                'db_table': 'journal',
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('reason', models.CharField()),
                ('date_issued', models.DateField()),
                ('is_paid', models.BooleanField()),
                ('date_paid', models.DateField(blank=True, null=True)),
                ('borrowing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared.borrowing')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.reader')),
                ('resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared.resource')),
            ],
            options={
                'db_table': 'fee',
            },
        ),
        migrations.CreateModel(
            name='Comic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('udc', models.CharField()),
                ('isbn', models.CharField()),
                ('author', models.CharField()),
                ('illustrator', models.CharField()),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.resource')),
            ],
            options={
                'db_table': 'comic',
            },
        ),
        migrations.CreateModel(
            name='Catalogue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.branch')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.resource')),
            ],
            options={
                'db_table': 'catalogue',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('udc', models.CharField()),
                ('isbn', models.CharField()),
                ('author', models.CharField()),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.resource')),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='Audiobook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('udc', models.CharField()),
                ('author', models.CharField()),
                ('narrator', models.CharField()),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shared.book')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared.resource')),
            ],
            options={
                'db_table': 'audiobook',
            },
        ),
    ]
